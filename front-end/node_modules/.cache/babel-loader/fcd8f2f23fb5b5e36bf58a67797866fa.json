{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\JoseReinoso\\\\Lambda\\\\React-Front-End\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\JoseReinoso\\\\Lambda\\\\React-Front-End\\\\front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JoseReinoso\\\\lambda\\\\React-Front-End\\\\front-end\\\\src\\\\Components\\\\EditBioForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction EditBioForm(props) {\n  const _useState = useState({\n    email: \"\",\n    about: \"\",\n    username: \"\",\n    id: localStorage.getItem(\"user_id\")\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        update = _useState2[0],\n        setUpdated = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  const saveInfo = event => {\n    event.preventDefault();\n    props.updateUserBio(update);\n    setModal(!modal);\n  };\n\n  const handleChange = event => {\n    setUpdated(_objectSpread({}, update, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"link\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Edit Bio\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Update your Bio Information\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    onChange: handleChange,\n    value: update.username,\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleChange,\n    value: update.email,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"About\"), React.createElement(Input, {\n    type: \"textarea\",\n    name: \"about\",\n    id: \"about\",\n    onChange: handleChange,\n    value: update.about,\n    placeholder: \"About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"link\",\n    onClick: saveInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    color: \"link\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Cancel\"))));\n}\n\nexport default EditBioForm;","map":{"version":3,"sources":["C:/Users/JoseReinoso/lambda/React-Front-End/front-end/src/Components/EditBioForm.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","EditBioForm","props","email","about","username","id","localStorage","getItem","update","setUpdated","modal","setModal","toggle","saveInfo","event","preventDefault","updateUserBio","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction EditBioForm(props) {\n  const [update, setUpdated] = useState({\n    email: \"\",\n    about: \"\",\n    username: \"\",\n    id: localStorage.getItem(\"user_id\")\n  })\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const saveInfo = (event) => {\n    event.preventDefault()\n    props.updateUserBio(update)\n    setModal(!modal)\n  }\n\n  const handleChange = event => {\n\n    setUpdated({\n      ...update,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  return (\n    <div>\n      <Button color=\"link\" onClick={toggle}>Edit Bio</Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Update your Bio Information</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"username\">Username</Label>\n              <Input type=\"text\" name=\"username\" id=\"username\" onChange={handleChange} value={update.username} placeholder=\"Username\" />\n              <Label for=\"email\">Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} value={update.email} placeholder=\"Email\" />\n              <Label for=\"about\">About</Label>\n              <Input type=\"textarea\" name=\"about\" id=\"about\" onChange={handleChange} value={update.about} placeholder=\"About\" />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"link\" onClick={saveInfo}>Save</Button>\n          <Button color=\"link\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default EditBioForm\n"]},"metadata":{},"sourceType":"module"}